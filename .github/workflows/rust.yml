name: Rust

on:
  push:
    branches: [ "main", "deploy" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: "full"

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4
    - uses: extractions/setup-just@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: cargo-bins/cargo-binstall@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Install requirements
      run: just install-requirements
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: Swatinem/rust-cache@v2
    - name: Build
      run: cargo build
    - name: Run tests
      run: cargo nextest run --workspace
    - name: Ensure no files have changed
      run: git diff --exit-code

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: success() && github.ref == 'refs/heads/deploy'
    env:
      RUST_BACKTRACE: "full"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.PAT }}
      - uses: extractions/setup-just@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: cargo-bins/cargo-binstall@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install requirements
        run: just install-requirements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: go version
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "25.3"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: protoc --version
      - run: brew install pulumi
        if: runner.os == 'macOS'
      - run: pulumi version
      - run: pulumi login --local

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: build
          save-if: false
          workspaces: |
            ./
            pulumi_wasm_generator_lib/tests/output/pulumi_providers/command/
            pulumi_wasm_generator_lib/tests/output/pulumi_providers/docker/
            pulumi_wasm_generator_lib/tests/output/pulumi_providers/random/
            pulumi_wasm_generator_lib/tests/output/pulumi_tests/cyclic-types/
            pulumi_wasm_generator_lib/tests/output/pulumi_tests/mini-awsnative/

      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 7
      - name: Replace version
        run: just update-version "0.0.0-NIGHTLY-${{ steps.short-sha.outputs.sha }}"

      - name: Build
        run: cargo build
      - name: Run tests
        run: cargo nextest run --workspace

      - name: Create commit
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Release v0.0.0-NIGHTLY-${{ steps.short-sha.outputs.sha }}"
          git tag "v0.0.0-NIGHTLY-${{ steps.short-sha.outputs.sha }}"
          git push origin "v0.0.0-NIGHTLY-${{ steps.short-sha.outputs.sha }}"
